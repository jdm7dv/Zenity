<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminAuthenticationExceptionMessage" xml:space="preserve">
    <value>User credentials are not verified or user is not administrator.</value>
  </data>
  <data name="DatabaseExceptionMessage" xml:space="preserve">
    <value>An error occurred on authentication database. Please see inner exception for details.</value>
  </data>
  <data name="DigestTokenProperties" xml:space="preserve">
    <value>All DigestSecurityToken properties</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="EmailFormatExceptionMessage" xml:space="preserve">
    <value>Email format not valid.</value>
  </data>
  <data name="ExceptionMessage" xml:space="preserve">
    <value>An error has occurred. Please refer to the inner exception for details.</value>
  </data>
  <data name="IndexValuesExceptionMessage" xml:space="preserve">
    <value>Index values not in proper range. </value>
  </data>
  <data name="InvalidDigestToken" xml:space="preserve">
    <value>Invalid type of token is passed. 'DigestSecurityToken' is expected.</value>
  </data>
  <data name="InvalidTokenMessage" xml:space="preserve">
    <value>The AuthenticatedToken passed is not valid. Please log in again to get a valid token.</value>
  </data>
  <data name="InvalidTokenTypeMessage" xml:space="preserve">
    <value>Invalid credentialToken type. 'UserNameSecurityToken' type is expected.</value>
  </data>
  <data name="LoginFormatExceptionMessage" xml:space="preserve">
    <value>This login name is not in valid format</value>
  </data>
  <data name="MandatoryPropertyNotSetExceptionMessage" xml:space="preserve">
    <value>Property cannot be null : {0}.</value>
  </data>
  <data name="ParameterKeyNullExceptionMessage" xml:space="preserve">
    <value>Key cannot be null or empty.</value>
  </data>
  <data name="PasswordExpiredExceptionMessage" xml:space="preserve">
    <value>Your password has expired. Please change password and then retry login.</value>
  </data>
  <data name="PasswordExpiryErrorMessage" xml:space="preserve">
    <value>Password expiry cannot be less than 7 days or more than 100 days.</value>
  </data>
  <data name="PasswordMaxLengthErrorMessage" xml:space="preserve">
    <value>Maximum length of password cannot exceed 100.</value>
  </data>
  <data name="PasswordMinLengthErrorMessage" xml:space="preserve">
    <value>Minimum length of password cannot be less than 6.</value>
  </data>
  <data name="PasswordPolicyReadExceptionMessage" xml:space="preserve">
    <value>Exception while reading password policy. Cannot check policy conformance of new passwords.</value>
  </data>
  <data name="PolicyConformanceExceptionMessage" xml:space="preserve">
    <value>The password does not conform to password policy.</value>
  </data>
  <data name="ReaderClosedExceptionMessage" xml:space="preserve">
    <value>The SqlDataReader object is closed. This method requires a reader in open state.</value>
  </data>
  <data name="TypeInitializationExceptionMessage" xml:space="preserve">
    <value>Application is not configured correctly. Please check inner exception for details.</value>
  </data>
  <data name="ValidFromValidUpToExceptionMessage" xml:space="preserve">
    <value>ValidFrom must be less than ValidUpTo.</value>
  </data>
</root>