//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zentity.Security.AuthorizationHelper {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ConstantStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConstantStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zentity.Security.AuthorizationHelper.ConstantStrings", typeof(ConstantStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator and Guest are inbuilt accounts and cannot be updated or deleted..
        /// </summary>
        internal static string AdministratorOrGuestUpdateException {
            get {
                return ResourceManager.GetString("AdministratorOrGuestUpdateException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrators and All Users are inbuilt groups and cannot be updated or deleted..
        /// </summary>
        internal static string AdministratorsOrAllUsersUpdateException {
            get {
                return ResourceManager.GetString("AdministratorsOrAllUsersUpdateException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot set both &apos;Allow&apos; and &apos;Deny&apos; for a permission..
        /// </summary>
        internal static string AllowAndDenyException {
            get {
                return ResourceManager.GetString("AllowAndDenyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator and Guest are inbuilt accounts and cannot be moved to other groups, and all users are part of AllUsers group by default and cannot be added and removed from that group..
        /// </summary>
        internal static string BuiltInUserToBuiltInGroupException {
            get {
                return ResourceManager.GetString("BuiltInUserToBuiltInGroupException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application is not configured correctly. Please see inner exception for details..
        /// </summary>
        internal static string ConfigurationException {
            get {
                return ResourceManager.GetString("ConfigurationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occurred while accessing the database. Please see inner exception for details..
        /// </summary>
        internal static string DatabaseException {
            get {
                return ResourceManager.GetString("DatabaseException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group: {0} does not exist..
        /// </summary>
        internal static string GroupDoesNotExist {
            get {
                return ResourceManager.GetString("GroupDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group: {0} already exists..
        /// </summary>
        internal static string GroupExists {
            get {
                return ResourceManager.GetString("GroupExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not update group name. Group: {0} already exist..
        /// </summary>
        internal static string GroupUpdateException {
            get {
                return ResourceManager.GetString("GroupUpdateException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity: {0} does not exist..
        /// </summary>
        internal static string IdentityDoesNotExist {
            get {
                return ResourceManager.GetString("IdentityDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity: {0} already exists..
        /// </summary>
        internal static string IdentityExists {
            get {
                return ResourceManager.GetString("IdentityExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity or group does not exist..
        /// </summary>
        internal static string InvalidIdentityOrGroup {
            get {
                return ResourceManager.GetString("InvalidIdentityOrGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This permission name is not valid. .
        /// </summary>
        internal static string InvalidPermissionName {
            get {
                return ResourceManager.GetString("InvalidPermissionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZentityUser and Identity object do not belong to same user..
        /// </summary>
        internal static string InvalidZentityUserAndIdentityObject {
            get {
                return ResourceManager.GetString("InvalidZentityUserAndIdentityObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null object was encountered. Please check whether a required configuration setting is missing. Please see inner exception for details. .
        /// </summary>
        internal static string NullReferenceException {
            get {
                return ResourceManager.GetString("NullReferenceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;configuration&gt;
        ///  &lt;SecurityConfigSettings&gt;
        ///    &lt;Predicates&gt;
        ///      &lt;SecurityPredicates&gt;
        ///        &lt;add Name=&quot;Create&quot;
        ///             Priority=&quot;0&quot;
        ///             Uri=&quot;urn:zentity/module/zentity-authorization/predicate/has-create-access&quot;
        ///             InversePredicateUri=&quot;urn:zentity/module/zentity-authorization/predicate/deny-create-access&quot;/&gt;
        ///        &lt;add Name=&quot;Read&quot;
        ///             Priority=&quot;4&quot;
        ///             Uri=&quot;urn:zentity/module/zentity-authorization/predicate/has-re [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SecurityConfiguration {
            get {
                return ResourceManager.GetString("SecurityConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User token is not valid.
        /// </summary>
        internal static string TokenNotValidException {
            get {
                return ResourceManager.GetString("TokenNotValidException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User does not have permission to perform this operation..
        /// </summary>
        internal static string UnauthorizedAccessException {
            get {
                return ResourceManager.GetString("UnauthorizedAccessException", resourceCulture);
            }
        }
    }
}
