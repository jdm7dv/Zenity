<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <!-- This section adds reference to the assemblies containing security configuration sections. -->
  <configSections>
    <section name="Authentication" type="Zentity.Security.Authentication.AuthenticationConfigurationSection, 
             Zentity.Security.Authentication"/>
    <section name="PasswordPolicy" type="Zentity.Security.AuthenticationProvider.PasswordManagement.PasswordPolicy, 
             Zentity.Security.AuthenticationProvider"/>
  </configSections>
  <appSettings>
    <add key="CoreConnectionString" value="provider=System.Data.SqlClient;metadata=res://Zentity.ScholarlyWorks; provider connection string=&quot;Data Source=.;Initial Catalog=PlatformDB;Integrated Security=True;Connection Timeout=120;&quot;"/>
    <add key="ServiceHost" value="http://win642008:9090/"/>
    <add key="OreBaseUri" value="OaiOre/Ore.ashx/"/>
    <!-- A Semi column separated Assembly Names-->
    <add key="CustomResourceTypeAssemblies" value="Zentity.ScholarlyWorks"/>
    
    <!-- Security configuration settings -->
    <!-- The settings IsBasicSupported and IsDigestSupported decide whether http-basic and http-digest authentication will
    be supported by this service. -->
    <add key="IsBasicSupported" value="True"/>
    <add key="IsDigestSupported" value="True"/>
    <!--Realm value which gets displayed in authentication dialog in browser. -->
    <add key="Realm" value="Zentity"/>
    <!-- Same nonce value will be sent by the server for the number of minutes mentioned here. Increasing this value will improve performance, 
    however, it will be less secure than a smaller value.-->
    <add key="NonceExpiryInMinutes" value="2"/>
    <!-- 
      This configuration setting decides whether the password policy is applied. If this is set to true
      the new passwords entered while changing password or creation of user account will be checked against the password policy. 
    -->
    <add key="ApplyPasswordPolicy" value="False"/>
    <!-- 
      IMPORTANT It is recommended that this setting should be set to true from the point of view of ensuring secure storage of passwords.
      
      This configuration setting can be changed only once right after Zentity is installed, before creating any 
      user accounts. If this is changed afterwards it will lead to errors in authenticating users.
      Also the built in users - administrator and guest have their passwords stored in encrypted form. You need to set them in clear text in 
      the authentication database, if this setting is made false.
    -->
    <add key="EncryptPassword" value="True"/>
    <add key="encryptionKey" value="877D3C2437D7B9DF4F31E9AE6CA97C3F8AE99B02BF66D137F865A8651C1A36D2"/>
  </appSettings>
  <!-- 
      Authentication configuration section
      Add one provider entry for each authentication implementation. 
      name = Choose a unique name for authentication provider. 
      type = Name of the type implementing IAuthenticationProvider, Fully qualified assembly name
  -->
  <Authentication>
    <Providers>
      <add name="ZentityAuthenticationProvider" type="Zentity.Security.AuthenticationProvider.ZentityAuthenticationProvider, 
         Zentity.Security.AuthenticationProvider"/>
      <add name="HttpDigestAuthenticationProvider"
           type="Zentity.Security.AuthenticationProvider.DigestAuthentication.HttpDigestAuthenticationProvider, 
         Zentity.Security.AuthenticationProvider"/>
    </Providers>
  </Authentication>
  <!--
      This policy will be applied based on config setting 'ApplyPasswordPolicy'.
      Password policy configuration section. Please add only one policy entry in this section. Otherwise the behavior of the application cannot 
      be predicted.
      MinimumLength = Desired minimum length of the password. Value must be >= 6
      MaximumLength = Desired maximum length of the password. Value must be <= 100.
      ExpiresInDays = Number of days after which a user must change his password. Value must be between 7 and 100.
      StartWithAlphabet = Set to True if password must start with an alphabet.
      MustContainDigit = Set to True if password must contain a digit.
      MustContainSpecialCharacter = Set to True if password must contain a special character - ~`!@#$%^&*()_-+={[}]|\\:;\"'<,>.?/
  -->
  <PasswordPolicy>
    <CurrentPolicy
      MinimumLength="7"
        MaximumLength="20"
        ExpiresInDays="90"
        StartWithAlphabet="true"
        MustContainDigit="true"
        MustContainSpecialCharacter="true"/>
  </PasswordPolicy>
  <connectionStrings>
    <!-- This connection string is required for accessing the authentication database. -->
    <add name="AuthenticationConnection" connectionString="Data Source=.;Initial Catalog=Zentity.Authentication; integrated security=true"/>
  </connectionStrings>
  <system.web>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <trace enabled="false"/>
    <httpRuntime executionTimeout="110"/>
    <compilation debug="false">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="None"/>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
   
    <httpHandlers>
      <add verb="GET" path="Ore.ashx" type="Zentity.Services.ServiceHandler,Zentity.Services"/>
      <add verb="GET" path="Ore.ashx/*" type="Zentity.Services.ServiceHandler,Zentity.Services"/>
    </httpHandlers>
    <httpModules>
     
    </httpModules>
  </system.web>
  
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
    </modules>
    <handlers>
      <add name="Ore" verb="GET" path="Ore.ashx" type="Zentity.Services.ServiceHandler,Zentity.Services"/>
    </handlers>
  </system.webServer>
  </configuration>
