#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zentity.Services.Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Zentity")]
	public partial class ZentityAdministrationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPublishRequestRecovery(PublishRequestRecovery instance);
    partial void UpdatePublishRequestRecovery(PublishRequestRecovery instance);
    partial void DeletePublishRequestRecovery(PublishRequestRecovery instance);
    #endregion
		
		public ZentityAdministrationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZentityAdministrationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZentityAdministrationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZentityAdministrationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PublishRequestRecovery> PublishRequestRecoveries
		{
			get
			{
				return this.GetTable<PublishRequestRecovery>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Administration.PublishRequestRecovery")]
	public partial class PublishRequestRecovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InstanceId;
		
		private bool _IsQueuedRequest;
		
		private int _QueueOrder;
		
		private string _DataModelNamespace;
		
		private string _ResourceTypeName;
		
		private System.Xml.Linq.XElement _ObjectData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstanceIdChanging(System.Guid value);
    partial void OnInstanceIdChanged();
    partial void OnIsQueuedRequestChanging(bool value);
    partial void OnIsQueuedRequestChanged();
    partial void OnQueueOrderChanging(int value);
    partial void OnQueueOrderChanged();
    partial void OnDataModelNamespaceChanging(string value);
    partial void OnDataModelNamespaceChanged();
    partial void OnResourceTypeNameChanging(string value);
    partial void OnResourceTypeNameChanged();
    partial void OnObjectDataChanging(System.Xml.Linq.XElement value);
    partial void OnObjectDataChanged();
    #endregion
		
		public PublishRequestRecovery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InstanceId
		{
			get
			{
				return this._InstanceId;
			}
			set
			{
				if ((this._InstanceId != value))
				{
					this.OnInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._InstanceId = value;
					this.SendPropertyChanged("InstanceId");
					this.OnInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQueuedRequest", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsQueuedRequest
		{
			get
			{
				return this._IsQueuedRequest;
			}
			set
			{
				if ((this._IsQueuedRequest != value))
				{
					this.OnIsQueuedRequestChanging(value);
					this.SendPropertyChanging();
					this._IsQueuedRequest = value;
					this.SendPropertyChanged("IsQueuedRequest");
					this.OnIsQueuedRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int QueueOrder
		{
			get
			{
				return this._QueueOrder;
			}
			set
			{
				if ((this._QueueOrder != value))
				{
					this.OnQueueOrderChanging(value);
					this.SendPropertyChanging();
					this._QueueOrder = value;
					this.SendPropertyChanged("QueueOrder");
					this.OnQueueOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataModelNamespace", DbType="NVarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DataModelNamespace
		{
			get
			{
				return this._DataModelNamespace;
			}
			set
			{
				if ((this._DataModelNamespace != value))
				{
					this.OnDataModelNamespaceChanging(value);
					this.SendPropertyChanging();
					this._DataModelNamespace = value;
					this.SendPropertyChanged("DataModelNamespace");
					this.OnDataModelNamespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ResourceTypeName
		{
			get
			{
				return this._ResourceTypeName;
			}
			set
			{
				if ((this._ResourceTypeName != value))
				{
					this.OnResourceTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ResourceTypeName = value;
					this.SendPropertyChanged("ResourceTypeName");
					this.OnResourceTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectData", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ObjectData
		{
			get
			{
				return this._ObjectData;
			}
			set
			{
				if ((this._ObjectData != value))
				{
					this.OnObjectDataChanging(value);
					this.SendPropertyChanging();
					this._ObjectData = value;
					this.SendPropertyChanged("ObjectData");
					this.OnObjectDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
